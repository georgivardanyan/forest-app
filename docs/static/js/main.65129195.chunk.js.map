{"version":3,"sources":["assets/logo.svg","features/forest/forestSlice.ts","components/NavBar.tsx","pages/Upload.tsx","pages/Map.tsx","features/forest/ChartCanvasContainer.ts","features/forest/types.ts","features/forest/chartUtils.ts","pages/Histogram.tsx","pages/Scatterplot.tsx","components/SpeciesFilter.tsx","pages/Pie.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","SvgLogo","_ref","svgRef","title","titleId","props","height","viewBox","width","xmlns","ref","id","ForwardRef","forestSlice","createSlice","name","initialState","loading","stands","selectedSpecies","reducers","setLoading","state","action","payload","setStands","setSelectedSpecies","actions","selectLoading","forest","selectStands","selectStandsBySpecies","createSelector","_","species","filter","o","main_species","selectSelectedSpecies","NavLink","styled","Link","Nav","div","logoAnimation","keyframes","Logo","NavBar","useSelector","history","useHistory","useState","logoKey","setLogoKey","onClick","push","className","toString","to","exact","Upload","dispatch","useDispatch","onDrop","data","errors","map","setTimeout","onError","err","file","inputElem","reason","alert","config","header","dynamicTyping","transformHeader","MapLayerContainer","MapLayer","ReactMapboxGl","accessToken","process","ClosePopupContainer","initialView","center","zoom","Map","mapRef","useRef","popupData","setPopupData","onFeatureClick","e","coordinates","feature","geometry","slice","stand","properties","Math","abs","lngLat","lng","closePopup","useEffect","style","containerStyle","minHeight","onStyleLoad","current","type","layout","onMouseEnter","getCanvas","cursor","onMouseLeave","lat","minWidth","relative_vol","age","size","Species","ChartCanvasContainer","options","scales","yAxes","ticks","beginAtZero","xAxes","scaleLabel","display","labelString","legend","stopPropagation","speciesColors","pine","spruce","birch","other","Histogram","barKey","setBarKey","chartData","setChartData","canvasRef","containerRef","incrementBarKey","throttle","prev","onResize","window","addEventListener","removeEventListener","preparedData","useMemo","volumes","round","maxVolume","max","minVolume","min","volumeKeys","range","forEach","labels","entries","value","gradient","getContext","createLinearGradient","offsetWidth","addColorStop","datasets","label","backgroundColor","borderWidth","scatterplotOptions","tooltips","callbacks","tooltipItem","yLabel","Scatterplot","vol","meanBy","x","y","pointRadius","pointHoverRadius","FilterContainer","Select","select","SpeciesFilter","val","onChange","values","t","Pie","backgrounds","chain","groupBy","amount","item","animation","animateScale","RouterContainer","App","basename","path","component","render","store","configureStore","reducer","forestReducer","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.65129195.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m321.339844 63.003906-9.382813-9.378906c-2.933593-2.929688-7.679687-2.929688-10.605469 0-2.929687 2.929688-2.929687 7.679688 0 10.605469l9.382813 9.378906c1.464844 1.464844 3.382813 2.199219 5.300781 2.199219 1.921875 0 3.839844-.734375 5.304688-2.199219 2.929687-2.929687 2.929687-7.675781 0-10.605469zm0 0\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m326.210938 127.785156c1.464843 1.46875 3.382812 2.199219 5.304687 2.199219 1.917969 0 3.835937-.730469 5.300781-2.195313 2.929688-2.929687 2.929688-7.679687 0-10.605468l-9.378906-9.382813c-2.929688-2.933593-7.679688-2.929687-10.609375-.003906-2.929687 2.929687-2.929687 7.679687 0 10.605469zm0 0\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m250.492188 117.75c-2.929688 2.929688-2.929688 7.675781 0 10.605469l9.378906 9.382812c1.46875 1.464844 3.386718 2.195313 5.304687 2.195313 1.921875 0 3.839844-.730469 5.304688-2.195313 2.929687-2.929687 2.929687-7.679687 0-10.605469l-9.378907-9.382812c-2.929687-2.929688-7.679687-2.929688-10.609374 0zm0 0\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m393.652344 193.019531c1.464844 1.460938 3.382812 2.195313 5.300781 2.195313 1.921875 0 3.839844-.734375 5.304687-2.195313 2.929688-2.929687 2.929688-7.679687 0-10.609375l-9.378906-9.378906c-2.929687-2.929688-7.679687-2.929688-10.609375 0-2.925781 2.929688-2.925781 7.675781 0 10.605469zm0 0\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m232.355469 180.199219c-2.929688-2.925781-7.679688-2.929688-10.609375 0-2.929688 2.929687-2.929688 7.679687 0 10.605469l9.382812 9.382812c1.464844 1.464844 3.382813 2.195312 5.300782 2.195312 1.921874 0 3.839843-.730468 5.304687-2.195312 2.929687-2.929688 2.929687-7.675781 0-10.605469zm0 0\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m373.214844 232.734375c-2.929688 2.925781-2.929688 7.675781 0 10.605469l9.382812 9.382812c1.464844 1.464844 3.382813 2.195313 5.300782 2.195313 1.921874 0 3.839843-.730469 5.304687-2.195313 2.929687-2.929687 2.929687-7.675781 0-10.605468l-9.378906-9.382813c-2.929688-2.929687-7.679688-2.929687-10.609375 0zm0 0\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m504.5 445.5625h-87.273438v-34.496094h57.019532c3.878906 0 7.238281-1.722656 9.21875-4.722656 1.976562-3 2.234375-6.765625.710937-10.324219l-16.988281-39.683593c-1.628906-3.808594-6.039062-5.574219-9.84375-3.941407-3.808594 1.628907-5.574219 6.039063-3.945312 9.84375l14.480468 33.828125h-50.652344v-28.441406c0-4.144531-3.359374-7.5-7.5-7.5-4.144531 0-7.5 3.355469-7.5 7.5v28.441406h-46.453124l56.054687-130.957031 27.019531 63.125c1.628906 3.808594 6.039063 5.574219 9.847656 3.941406 3.808594-1.628906 5.570313-6.035156 3.941407-9.84375l-16.539063-38.640625c1.003906-.929687 1.996094-1.875 2.960938-2.851562 18.367187-18.589844 28.480468-43.222656 28.480468-69.355469 0-22.449219-7.742187-44.421875-21.804687-61.867187-12.265625-15.21875-28.894531-26.515626-47.402344-32.324219 1.175781-6.125 1.765625-12.347657 1.765625-18.582031 0-4.140626-3.355468-7.5-7.5-7.5-4.144531 0-7.5 3.359374-7.5 7.5 0 7.402343-.984375 14.792968-2.925781 21.957031-.535156 1.96875-.246094 4.066406.800781 5.816406 1.050782 1.75 2.761719 2.996094 4.75 3.453125 18.132813 4.1875 34.589844 14.515625 46.335938 29.09375 12.089844 15 18.480468 33.140625 18.480468 52.453125 0 21.5-8.089843 41.78125-22.792968 57.367187l-9.054688-21.160156c-1.726562-4.035156-5.042968-6.445312-8.863281-6.445312s-7.136719 2.410156-8.863281 6.445312l-19.789063 46.238282c-4.332031.75-8.746093 1.179687-13.222656 1.238281-2.96875.039062-5.632813 1.824219-6.796875 4.554687-9.589844 22.464844-30.398438 37.722656-54.269531 40.386719 0-22.0625 0-38.519531 0-38.519531v-47.746094l35.945312-35.949219c2.929688-2.929687 2.929688-7.679687 0-10.609375-2.929687-2.925781-7.679687-2.925781-10.605469.003906l-25.339843 25.339844v-37.175781c0-4.144531-3.359375-7.5-7.5-7.5-4.144531 0-7.5 3.355469-7.5 7.5v88.03125l-24.238281-24.234375c-2.929688-2.925781-7.675782-2.925781-10.605469 0-2.929688 2.929688-2.929688 7.679688 0 10.609375l34.84375 34.839844v35.410156c-11.25-1.257813-21.820313-5.3125-30.855469-11.601563l-34.589844-80.816406c-1.726562-4.035156-5.042968-6.445312-8.863281-6.445312s-7.136719 2.410156-8.863281 6.445312l-10.117188 23.644532-27.496094-45.296876h12.722657c4.066406 0 7.550781-1.917968 9.316406-5.125 1.769531-3.207031 1.523437-7.171874-.648437-10.609374l-29.367188-46.453126c1.136719-1.636718 2.324219-3.25 3.59375-4.820312 11.746094-14.574219 28.199219-24.90625 46.332031-29.089844 1.988281-.460937 3.703125-1.707031 4.75-3.457031 1.046875-1.746094 1.335938-3.847656.804688-5.8125-1.945313-7.175781-2.929688-14.5625-2.929688-21.957031 0-46.160156 37.554688-83.714844 83.714844-83.714844 34.191406 0 64.632813 20.457031 77.546875 52.121094 1.5625 3.835937 5.945312 5.679687 9.777344 4.109375 3.835937-1.5625 5.675781-5.941407 4.109375-9.773438-15.226563-37.335937-51.117188-61.457031-91.4375-61.457031-54.429688 0-98.714844 44.28125-98.714844 98.714844 0 6.226562.59375 12.449218 1.769531 18.578125-18.507812 5.8125-35.136718 17.105469-47.402344 32.324219-.171874.214843-.332031.4375-.5.652343l-19.699218-31.160156c-2.105469-3.328125-5.390625-5.234375-9.015625-5.234375-3.621094 0-6.90625 1.90625-9.011719 5.234375l-57.648438 91.195313c-2.171874 3.4375-2.414062 7.402343-.648437 10.609374 1.769531 3.207032 5.25 5.125 9.316406 5.125h12.722657l-37.664063 62.039063c-2.09375 3.453125-2.277344 7.410156-.488281 10.589844 1.792968 3.179687 5.269531 5.074219 9.308594 5.074219h14.160156l-39.371094 66.578124c-2.046875 3.460938-2.191406 7.414063-.386719 10.574219 1.800781 3.160157 5.277344 5.046875 9.296875 5.046875h36.589844c4.144531 0 7.5-3.359375 7.5-7.5 0-4.144531-3.355469-7.5-7.5-7.5h-28.441406l39.371094-66.578125c2.046874-3.457031 2.191406-7.410156.386718-10.570312-1.800781-3.160157-5.277344-5.046875-9.296875-5.046875h-13.988281l37.664062-62.042969c2.09375-3.449219 2.277344-7.40625.488282-10.585937-1.789063-3.179688-5.269532-5.078126-9.304688-5.078126h-12.433594l49.378907-78.113281 49.386719 78.113281h-12.4375c-4.039063 0-7.515626 1.898438-9.304688 5.078126-1.789062 3.179687-1.605469 7.140624.488281 10.585937l37.382813 61.585937-.195313.457032h-13.511719c-4.019531 0-7.496093 1.886718-9.296874 5.046875-1.804688 3.160156-1.660157 7.113281.386718 10.574219l9.128906 15.433593-21.890624 51.140625h-47.960938c-4.144531 0-7.5 3.355469-7.5 7.5 0 4.140625 3.355469 7.5 7.5 7.5h8.746094v59.621094h-111.246094c-4.144531 0-7.5 3.355469-7.5 7.5 0 4.140625 3.355469 7.5 7.5 7.5h497c4.144531 0 7.5-3.359375 7.5-7.5s-3.355469-7.5-7.5-7.5zm-129.570312-135.570312c.472656-.027344.941406-.070313 1.414062-.105469l-36.867188 86.132812c-1.523437 3.566407-1.265624 7.328125.714844 10.328125 1.980469 3 5.335938 4.71875 9.214844 4.71875h52.820312v34.496094h-93.339843c0-16.371094 0-56.59375 0-90.386719 28.308593-2.578125 53.316406-19.609375 66.042969-45.183593zm-81.042969 45.191406v90.378906h-68.910157v-34.496094h57.019532c3.878906 0 7.238281-1.722656 9.21875-4.722656 1.976562-3 2.234375-6.765625.710937-10.324219l-19.605469-45.804687c6.847657 2.589844 14.089844 4.289062 21.566407 4.96875zm-74.308594-90.074219 56.050781 130.957031h-50.652344v-28.441406c0-4.144531-3.359374-7.5-7.5-7.5-4.144531 0-7.5 3.355469-7.5 7.5v28.441406h-46.453124zm-85.832031 120.832031h17.792968l-4.3125 10.078125c-1.523437 3.5625-1.265624 7.328125.714844 10.328125 1.980469 2.996094 5.335938 4.71875 9.214844 4.71875h52.820312v34.496094h-76.230468zm0 0\"\n});\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"512pt\",\n    viewBox: \"0 -26 512 512\",\n    width: \"512pt\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.f3014543.svg\";\nexport { ForwardRef as ReactComponent };","import { createSlice, PayloadAction, createSelector } from '@reduxjs/toolkit'\nimport { IForestStand } from './types'\n\nimport { RootState } from '../../app/store'\n\ninterface ForestState {\n  loading: boolean,\n  stands: IForestStand[],\n  selectedSpecies: string,\n}\n\nconst initialState: ForestState = {\n  loading: false,\n  stands: [],\n  selectedSpecies: '',\n}\n\nexport const forestSlice = createSlice({\n  name: 'forest',\n  initialState,\n  reducers: {\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload\n    },\n    setStands: (state, action: PayloadAction<IForestStand[]>) => {\n      state.stands = action.payload\n    },\n    setSelectedSpecies: (state, action: PayloadAction<string>) => {\n      state.selectedSpecies = action.payload\n    },\n  },\n})\n\nexport const {\n  setLoading,\n  setStands,\n  setSelectedSpecies\n} = forestSlice.actions\n\nexport const selectLoading = (state: RootState) => state.forest.loading\n\nexport const selectStands = (state: RootState) => state.forest.stands\n\nconst selectSpeciesParam = (_: any, species: string) => species\n\nexport const selectStandsBySpecies = createSelector(\n  [selectStands, selectSpeciesParam],\n  (stands: IForestStand[], species: string) => species ? stands.filter(o => o.main_species === species) : stands,\n)\n\nexport const selectStandsBySpeciesCount = createSelector(\n  selectStandsBySpecies,\n  (stands) => stands.length,\n)\n\nexport const selectSelectedSpecies = (state: RootState) => state.forest.selectedSpecies\n\nexport default forestSlice.reducer\n","import React, { FC, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { ReactComponent as AppLogo } from '../assets/logo.svg'\nimport { useHistory, NavLink as Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { selectLoading, selectStands } from '../features/forest/forestSlice'\n\nconst NavLink = styled(Link)`\n  background: white;\n  color: black;\n  text-decoration: none;\n  padding: 0.25rem 0.5rem;\n  border-radius: 5px;\n  cursor: pointer;\n  \n  &.active {\n    background: #70ca70;\n    color: white;\n  }\n`\n\nconst Nav = styled.div`\n  background: #f0eef5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  flex-wrap: wrap;\n  \n  & > a {\n    margin: 0 1rem;\n  }\n`\n\nconst logoAnimation = keyframes`\n  from {\n    transform: translateY(-80px);\n  }\n  to {\n    transform: translateY(0);\n  }\n`\n\nconst Logo = styled.div`\n  margin-right: auto;\n  background: white;\n  padding: 0.2rem 1rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  border-radius: 7px;\n  \n  svg {\n    fill: forestgreen;\n    width: 2.5rem;\n    height: 2.5rem;\n    margin-right: 2rem;\n    animation-name: ${logoAnimation};\n    animation-timing-function: cubic-bezier(0,.24,.07,.99);\n    animation-duration: .8s;\n    animation-delay: 80ms;\n  }\n  \n  .logo-text {\n    font-size: 2rem;\n    animation-name: ${logoAnimation};\n    animation-timing-function: cubic-bezier(0,.24,.07,.99);\n    animation-duration: .8s;\n  }\n`\n\nexport const NavBar: FC = () => {\n  const loading = useSelector(selectLoading)\n\n  const history = useHistory()\n  const [logoKey, setLogoKey] = useState<number>(1)\n  const stands = useSelector(selectStands)\n\n  const redirectToHome = () => {\n    setLogoKey(logoKey + 1)\n    history.push('/')\n  }\n\n  return (\n    <Nav>\n      <Logo onClick={redirectToHome} key={logoKey.toString()}>\n        <div>\n          <AppLogo/>\n        </div>\n        <div className=\"logo-text\">\n          Forest App\n        </div>\n      </Logo>\n      <NavLink to=\"/\" exact>\n        Upload\n      </NavLink>\n      {!!stands.length && !loading && (\n        <>\n          <NavLink to=\"/map\">\n            Map\n          </NavLink>\n          <NavLink to=\"/histogram\">\n            Histogram\n          </NavLink>\n          <NavLink to=\"/scatterplot\">\n            Scatterplot\n          </NavLink>\n          <NavLink to=\"/pie\">\n            Pie\n          </NavLink>\n        </>\n      )}\n    </Nav>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { CSVReader } from 'react-papaparse'\nimport { IForestStand } from '../features/forest/types'\nimport { useDispatch } from 'react-redux'\nimport { setStands, setLoading } from '../features/forest/forestSlice'\n\ninterface IParsedData {\n  data: IForestStand\n  errors: []\n  meta: object\n}\n\nexport const Upload: FC = () => {\n  const dispatch = useDispatch()\n\n  const handleOnDrop = (data: any) => {\n    dispatch(setLoading(true))\n    const stands: IForestStand[] = data.filter((o: IParsedData) => !o.errors.length).map((o: IParsedData) => o.data)\n\n    dispatch(setStands(stands))\n\n    setTimeout(() => {\n      dispatch(setLoading(false))\n    }, 2300)\n  }\n\n  const readerConfig = {\n    header: true,\n    dynamicTyping: true,\n    transformHeader(name: string) {\n      switch (name) {\n        case 'standid':\n          return 'id'\n        case 'longitude':\n          return 'lng'\n        case 'latitude':\n          return 'lat'\n        case 'vol_m3_per_ha':\n          return 'relative_vol'\n        case 'age_years':\n          return 'age'\n        case 'size_in_ha':\n          return 'size'\n        default:\n          return name\n      }\n    },\n  }\n\n  const handleOnError = (err: any, file: any, inputElem: any, reason: any) => {\n    alert('Something went wrong!')\n  }\n\n  return (\n    <>\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        config={readerConfig}\n      >\n        <span>Drop CSV file here or click to upload</span>\n      </CSVReader>\n    </>\n  )\n}\n","/* eslint-disable react/style-prop-object */\nimport React, { FC, useEffect, useRef, useState } from 'react'\nimport ReactMapboxGl, { Layer, Feature, Popup } from 'react-mapbox-gl'\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport { useSelector } from 'react-redux'\nimport { RootState } from '../app/store'\nimport { selectSelectedSpecies, selectStandsBySpecies } from '../features/forest/forestSlice'\nimport { MapMouseEvent } from 'mapbox-gl'\nimport { IForestStand } from '../features/forest/types'\nimport styled from 'styled-components'\n\nconst MapLayerContainer = styled.div`\n  canvas {\n    outline: none;\n  }\n`\n\nconst MapLayer = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_KEY as string,\n})\n\ninterface IPopupData {\n  stand: IForestStand\n  coordinates: number[]\n}\n\nconst ClosePopupContainer = styled.div`\n  margin-left: auto;\n  text-align: right;\n\n  button {\n    outline: none;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin-left: auto;\n    \n    &:hover {\n      background:#cecedc;\n    }\n  }\n`\n\ninterface IInitialView {\n  center: [number, number]\n  zoom: [number]\n}\n\nconst initialView: IInitialView = {\n  center: [30, 60],\n  zoom: [3],\n}\n\nexport const Map: FC = () => {\n  const selectedSpecies = useSelector(selectSelectedSpecies)\n  const mapRef = useRef<mapboxgl.Map | null>(null)\n  const stands = useSelector(((state: RootState) => selectStandsBySpecies(state, selectedSpecies)))\n\n  const [popupData, setPopupData] = useState<IPopupData | null>(null)\n\n  const handleStyleLoad = (map: mapboxgl.Map) => {\n    mapRef.current = map\n  }\n\n  const onMouseEnter = (e: MapMouseEvent) => {\n    mapRef.current!.getCanvas().style.cursor = 'pointer'\n  }\n\n  const onMouseLeave = () => {\n    mapRef.current!.getCanvas().style.cursor = ''\n  }\n\n  const onFeatureClick = (e: any) => {\n    const coordinates = e.feature.geometry.coordinates.slice()\n    const stand = Object.assign({}, e.feature.properties)\n\n    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360\n    }\n\n    const newPopupData: IPopupData = {\n      stand,\n      coordinates,\n    }\n\n    setPopupData(newPopupData)\n  }\n\n  const closePopup = () => {\n    setPopupData(null)\n  }\n\n  useEffect(() => {\n    closePopup()\n  }, [selectedSpecies])\n\n  return (\n    <MapLayerContainer>\n      <MapLayer\n        center={initialView.center}\n        zoom={initialView.zoom}\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{ height: 'calc(100vh - 200px)', width: '100%', minHeight: '400px' }}\n        onStyleLoad={handleStyleLoad}\n      >\n        <Layer\n          type=\"symbol\"\n          layout={{\n            'text-field': ['get', 'main_species'],\n            'text-variable-anchor': ['top', 'bottom', 'left', 'right'],\n            'text-radial-offset': 1,\n            'text-justify': 'auto',\n            'icon-image': 'garden-11',\n          }}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        >\n          {stands.map(stand => (\n            <Feature\n              onClick={onFeatureClick}\n              properties={stand}\n              key={stand.id}\n              coordinates={[stand.lng, stand.lat]}\n            />\n          ))}\n        </Layer>\n        <>\n          {popupData && (\n            <Popup\n              coordinates={popupData.coordinates}\n              style={{ minWidth: '200px' }}\n            >\n              <ClosePopupContainer>\n                <button onClick={closePopup}>&times;</button>\n              </ClosePopupContainer>\n              <h2>{popupData.stand.main_species}</h2>\n              <p>ID: <code>{popupData.stand.id}</code></p>\n              <p>Longitude: <code>{popupData.stand.lng}</code></p>\n              <p>Latitude: <code>{popupData.stand.lat}</code></p>\n              <p>Relative wood volume: {popupData.stand.relative_vol} m<sup>3</sup>/ha</p>\n              <p>Average age: {popupData.stand.age} years</p>\n              <p>Size: {popupData.stand.size} ha</p>\n            </Popup>\n          )}\n        </>\n      </MapLayer>\n    </MapLayerContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const ChartCanvasContainer = styled.div`\n@media(min-width: 1080px) {\n    max-width: 1080px;\n    margin: 0 auto;\n  }\n`\n","export enum Species {\n  pine = 'pine',\n  spruce = 'spruce',\n  birch = 'birch',\n  other = 'other',\n}\n\nexport interface IForestStand {\n  id: number\n  lng: number\n  lat: number\n  main_species: Species\n  relative_vol: number\n  age: number\n  size: number\n}\n","import React from 'react'\nimport { Species } from './types'\n\nexport const options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n    xAxes: [{\n      scaleLabel: {\n        display: true,\n        labelString: 'relative volume (m3 per hectare)',\n      },\n    }],\n  },\n  legend: {\n    onClick(e: React.MouseEvent) {\n      e.stopPropagation()\n    },\n  },\n}\n\nexport interface IVolumeKey {\n  [key: string]: number\n}\n\nexport interface ICoordinates {\n  x: number\n  y: number\n}\n\nexport interface IBarChartDataset {\n  label: string\n  data: number[]\n  backgroundColor: string[] | CanvasGradient\n  borderWidth: number\n}\n\nexport interface IScatterChartDataset {\n  label: string\n  data: ICoordinates[]\n  backgroundColor: string[] | CanvasGradient\n  pointRadius: number\n  pointHoverRadius: number\n}\n\nexport interface IPieChartDataset {\n  data: number[]\n  backgroundColor: string[] | CanvasGradient\n}\n\ntype IChartDataset = IBarChartDataset | IScatterChartDataset | IPieChartDataset\n\nexport interface IChartData {\n  labels?: string[]\n  datasets: IChartDataset[]\n}\n\ntype ISpeciesColors = {\n  [key: string]: string\n}\n\nexport const speciesColors: ISpeciesColors = {\n  [Species.pine]: '#01796f',\n  [Species.spruce]: '#12552b',\n  [Species.birch]: '#f8dfa1',\n  [Species.other]: '#b5b5aa',\n}\n","import React, { FC, useEffect, useMemo, useRef, useState } from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport { useSelector } from 'react-redux'\nimport {\n  selectSelectedSpecies,\n  selectStandsBySpecies,\n} from '../features/forest/forestSlice'\nimport { max, round, min, range, throttle } from 'lodash'\nimport { RootState } from '../app/store'\nimport { ChartCanvasContainer } from '../features/forest/ChartCanvasContainer'\nimport {\n  IBarChartDataset,\n  IChartData,\n  IVolumeKey,\n  options,\n} from '../features/forest/chartUtils'\n\ninterface IPreparedData {\n  labels: string[]\n  data: number[]\n}\n\nexport const Histogram: FC = () => {\n  const [barKey, setBarKey] = useState<number>(1)\n  const selectedSpecies = useSelector(selectSelectedSpecies)\n\n  const stands = useSelector(((state: RootState) => selectStandsBySpecies(state, selectedSpecies)))\n\n  const [chartData, setChartData] = useState<IChartData>()\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const incrementBarKey = useRef(throttle(() => {\n    setBarKey(prev => prev + 1)\n  }, 500))\n\n  useEffect(() => {\n    const onResize = () => {\n      incrementBarKey.current()\n    }\n\n    window.addEventListener('resize', onResize)\n\n    return () => {\n      window.removeEventListener('resize', onResize)\n    }\n  }, [])\n\n  const preparedData = useMemo<IPreparedData>(() => {\n    const volumes = stands.map(o => round(o.relative_vol, -1))\n    const maxVolume = max(volumes) as number\n    const minVolume = min(volumes) as number\n\n    const volumeKeys: IVolumeKey = {}\n\n    range(minVolume, maxVolume + 10, 10).forEach((key) => {\n      volumeKeys[key.toString()] = volumes.filter(o => o === key).length\n    })\n\n    const labels: string[] = []\n    const data: number[] = []\n\n    Object.entries(volumeKeys).forEach(([key, value]) => {\n      labels.push(key)\n      data.push(value)\n    })\n\n    return { labels, data }\n  }, [stands])\n\n  useEffect(() => {\n    const ctx = canvasRef.current!.getContext('2d')!\n\n    const gradient = ctx.createLinearGradient(containerRef.current!.offsetWidth, 0, 0, 0)\n    gradient.addColorStop(0, 'rgb(255,92,38)')\n    gradient.addColorStop(1, 'rgb(207,255,135)')\n\n    const { labels, data } = preparedData\n\n    const dataset: IBarChartDataset = {\n      label: '# of stands',\n      data,\n      backgroundColor: gradient,\n      borderWidth: 1,\n    }\n\n    const newChartData: IChartData = {\n      labels,\n      datasets: [dataset],\n    }\n\n    setChartData(newChartData)\n  }, [preparedData, barKey])\n\n  return (\n    <ChartCanvasContainer ref={containerRef}>\n      <canvas ref={canvasRef} style={{ display: 'none' }}/>\n      {chartData && <Bar data={chartData} options={options}/>}\n    </ChartCanvasContainer>\n  )\n}\n","import React, { FC, useEffect, useMemo, useRef, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectSelectedSpecies, selectStandsBySpecies } from '../features/forest/forestSlice'\nimport { RootState } from '../app/store'\nimport {\n  IChartData,\n  ICoordinates,\n  IScatterChartDataset,\n  IVolumeKey,\n  options,\n} from '../features/forest/chartUtils'\nimport { max, min, range, round, meanBy } from 'lodash'\nimport { ChartCanvasContainer } from '../features/forest/ChartCanvasContainer'\nimport { Scatter } from 'react-chartjs-2'\n\ninterface IPreparedData {\n  data: ICoordinates[]\n}\n\nconst scatterplotOptions = Object.assign(options, {\n  tooltips: {\n    callbacks: {\n      label(tooltipItem: any) {\n        return tooltipItem.yLabel\n      },\n    },\n  },\n})\n\nexport const Scatterplot: FC = () => {\n  const selectedSpecies = useSelector(selectSelectedSpecies)\n  const stands = useSelector(((state: RootState) => selectStandsBySpecies(state, selectedSpecies)))\n\n  const [chartData, setChartData] = useState<IChartData>()\n\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const preparedData = useMemo<IPreparedData>(() => {\n    const volumes = stands.map(o => ({\n      vol: round(o.relative_vol, -1),\n      age: o.age,\n    }))\n\n    const maxVolume = max(volumes.map(o => o.vol)) as number\n    const minVolume = min(volumes.map(o => o.vol)) as number\n\n    const volumeKeys: IVolumeKey = {}\n\n    range(minVolume, maxVolume + 10, 10).forEach((key) => {\n      volumeKeys[key.toString()] = round(meanBy(volumes.filter(o => o.vol === key), 'age'))\n    })\n\n    const data: ICoordinates[] = []\n\n    Object.entries(volumeKeys).forEach(([key, value]) => {\n      data.push({ x: +key, y: value })\n    })\n\n    return { data }\n  }, [stands])\n\n  useEffect(() => {\n    const ctx = canvasRef.current!.getContext('2d')!\n\n    const gradient = ctx.createLinearGradient(containerRef.current!.offsetWidth, 0, 0, 0)\n    gradient.addColorStop(0, 'rgb(255,92,38)')\n    gradient.addColorStop(1, 'rgb(207,255,135)')\n\n    const { data } = preparedData\n\n    const dataset: IScatterChartDataset = {\n      label: 'average age',\n      data,\n      backgroundColor: gradient,\n      pointRadius: 5,\n      pointHoverRadius: 8,\n    }\n\n    const newChartData: IChartData = {\n      datasets: [dataset],\n    }\n\n    setChartData(newChartData)\n  }, [preparedData])\n\n  return (\n    <ChartCanvasContainer ref={containerRef}>\n      <canvas ref={canvasRef} style={{ display: 'none' }}/>\n      {chartData && <Scatter data={chartData} options={scatterplotOptions}/>}\n    </ChartCanvasContainer>\n  )\n}\n","import React, { ChangeEvent, FC } from 'react'\nimport styled from 'styled-components'\nimport { Species } from '../features/forest/types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectSelectedSpecies, setSelectedSpecies } from '../features/forest/forestSlice'\n\nconst FilterContainer = styled.div`\n  text-align: right;\n  margin-bottom: 1rem;\n`\n\nconst Select = styled.select`\n  outline: none;\n  border: 2px solid lightgreen;\n  border-radius: 5px;\n  background: white;\n\n  .selected {\n    background: #3ee;\n  }\n`\n\n\nexport const SpeciesFilter: FC = () => {\n  const val = useSelector(selectSelectedSpecies)\n  const dispatch = useDispatch()\n\n  return (\n    <FilterContainer>\n      <Select value={val}\n              onChange={(e: ChangeEvent<HTMLSelectElement>) => dispatch(setSelectedSpecies(e.target.value))}>\n        <option value=\"\" className={val === '' ? 'selected' : ''}>All</option>\n        {Object.values(Species).map(t => <option value={t} key={t}\n                                                 className={val === t ? 'selected' : ''}>{t}</option>)}\n      </Select>\n    </FilterContainer>\n  )\n}\n","import React, { FC, useEffect, useMemo, useState } from 'react'\nimport { ChartCanvasContainer } from '../features/forest/ChartCanvasContainer'\nimport { useSelector } from 'react-redux'\nimport { selectStands } from '../features/forest/forestSlice'\nimport { IChartData, IPieChartDataset, speciesColors } from '../features/forest/chartUtils'\nimport { chain } from 'lodash'\nimport { Pie as PieChart } from 'react-chartjs-2'\n\ninterface IPreparedData {\n  data: number[]\n  labels: string[]\n  backgrounds: string[]\n}\n\nexport const Pie: FC = () => {\n  const stands = useSelector(selectStands)\n\n  const [chartData, setChartData] = useState<IChartData>()\n\n  const preparedData = useMemo<IPreparedData>(() => {\n    const data: number[] = []\n    const labels: string[] = []\n    const backgrounds: string[] = []\n\n    const species = chain(stands)\n      .groupBy('main_species')\n      .map((stands, type) => ({\n        type,\n        amount: stands.length,\n      }))\n      .value()\n\n    species.forEach(item => {\n      labels.push(item.type)\n      data.push(item.amount)\n      backgrounds.push(speciesColors[item.type])\n    })\n\n    return { data, labels, backgrounds }\n  }, [stands])\n\n  useEffect(() => {\n    const { labels, data, backgrounds } = preparedData\n\n    const dataset: IPieChartDataset = {\n      data,\n      backgroundColor: backgrounds,\n    }\n\n    const newChartData: IChartData = {\n      labels,\n      datasets: [dataset],\n    }\n\n    setChartData(newChartData)\n  }, [preparedData])\n\n  return (\n    <ChartCanvasContainer>\n      {chartData && <PieChart data={chartData} options={{ animation: { animateScale: true } }}/>}\n    </ChartCanvasContainer>\n  )\n}\n","import React, { FC } from 'react'\r\nimport { NavBar } from './components/NavBar'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Upload } from './pages/Upload'\r\nimport { Map } from './pages/Map'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectStands } from './features/forest/forestSlice'\r\nimport { Histogram } from './pages/Histogram'\r\nimport { Scatterplot } from './pages/Scatterplot'\r\nimport { SpeciesFilter } from './components/SpeciesFilter'\r\nimport { Pie } from './pages/Pie'\r\n\r\nconst RouterContainer = styled.div`\r\n  padding: 1rem;\r\n`\r\n\r\nconst baseUrl = process.env.PUBLIC_URL || '/'\r\n\r\nconst App: FC = () => {\r\n  const stands = useSelector(selectStands)\r\n\r\n  return (\r\n    <Router basename={baseUrl}>\r\n      <div>\r\n        <NavBar/>\r\n        <RouterContainer>\r\n          <Switch>\r\n            <Route path=\"/\" component={Upload} exact/>\r\n            <Route path=\"/pie\" render={() => (!!stands.length ? <Pie/> : <Redirect to=\"/\"/>)}/>\r\n            <>\r\n              <SpeciesFilter/>\r\n              <Route path=\"/map\" render={() => (!!stands.length ? <Map/> : <Redirect to=\"/\"/>)}/>\r\n              <Route path=\"/histogram\" render={() => (!!stands.length ? <Histogram/> : <Redirect to=\"/\"/>)}/>\r\n              <Route path=\"/scatterplot\" render={() => (!!stands.length ? <Scatterplot/> : <Redirect to=\"/\"/>)}/>\r\n            </>\r\n          </Switch>\r\n        </RouterContainer>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\r\nimport forestReducer from '../features/forest/forestSlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    forest: forestReducer,\r\n  },\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n  ),\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister()\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { store } from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}